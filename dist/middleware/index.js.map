{"version":3,"sources":["../../src/middleware/index.js"],"names":["createError","require","path","cookieParser","logger","NODE_ENV","process","env","middleware","registerMiddleware","app","express","use","json","urlencoded","extended","limit","static","join","__dirname","errorHandler","req","res","next","err","locals","message","error","get","status","module","exports"],"mappings":"AAAA,MAAMA,cAAcC,QAAQ,aAAR,CAApB;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,eAAeF,QAAQ,eAAR,CAArB;AACA,MAAMG,SAASH,QAAQ,QAAR,CAAf;;AAEA,MAAM,EAAEI,QAAF,KAAeC,QAAQC,GAA7B;;AAEA,MAAMC,aAAa,EAAnB;;AAEAA,WAAWC,kBAAX,GAAgC,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAChDD,MAAIE,GAAJ,CAAQR,OAAO,KAAP,CAAR;AACAM,MAAIE,GAAJ,CAAQD,QAAQE,IAAR,EAAR;AACAH,MAAIE,GAAJ,CAAQD,QAAQG,UAAR,CAAmB,EAAEC,UAAU,IAAZ,EAAkBC,OAAO,MAAzB,EAAnB,CAAR;AACAN,MAAIE,GAAJ,CAAQT,cAAR;AACAO,MAAIE,GAAJ,CAAQD,QAAQM,MAAR,CAAef,KAAKgB,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACD,CAND;;AAQAX,WAAWY,YAAX,GAA2BV,GAAD,IAAS;AACjC;AACAA,MAAIE,GAAJ,CAAQ,CAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1BA,SAAKvB,YAAY,GAAZ,CAAL;AACD,GAFD;;AAIA;AACAU,MAAIE,GAAJ,CAAQ,CAACY,GAAD,EAAMH,GAAN,EAAWC,GAAX,KAAmB;AACzB;AACAA,QAAIG,MAAJ,CAAWC,OAAX,GAAqBF,IAAIE,OAAzB;AACAJ,QAAIG,MAAJ,CAAWE,KAAX,GAAmBN,IAAIX,GAAJ,CAAQkB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,QAAIO,MAAJ,CAAWL,IAAIK,MAAJ,IAAc,GAAzB,EAA8BhB,IAA9B,CAAmC;AACjCa,eAASF,IAAIE,OADoB;AAEjCC,aAAOH;AAF0B,KAAnC;AAID,GAVD;AAWD,CAlBD;;AAqBAM,OAAOC,OAAP,GAAiBvB,UAAjB","file":"index.js","sourcesContent":["const createError = require('http-errors');\nconst path = require('path');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\n\nconst { NODE_ENV } = process.env;\n\nconst middleware = {};\n\nmiddleware.registerMiddleware = (app, express) => {\n  app.use(logger('dev'));\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true, limit: '50mb' }));\n  app.use(cookieParser());\n  app.use(express.static(path.join(__dirname, '../public')));\n};\n\nmiddleware.errorHandler = (app) => {\n  // catch 404 and forward to error handler\n  app.use((req, res, next) => {\n    next(createError(404));\n  });\n\n  // error handler\n  app.use((err, req, res) => {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500).json({\n      message: err.message,\n      error: err,\n    });\n  });\n};\n\n\nmodule.exports = middleware;\n"]}